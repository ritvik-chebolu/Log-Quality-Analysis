import os
from typing import List
import spacy
from joblib import load

# !!! Autogenerated !!! Do not change. Path where this python file is located
home = os.path.dirname(os.path.realpath(__file__))


# !!! Autogenerated !!! Do not change the class name
class LevelQulogSmRf:
    def __init__(self):
        # !!! Autogenerated !!! Do not change.
        self.model = self.load(os.path.join(home, './model'))
        self.nlp = spacy.load('en_core_web_sm')

    # !!! Autogenerated !!! Do not change the method name.
    def load(self, model_file_path):
        return load(model_file_path)

    def _get_sm_embedding(self, doc):
        return doc.vector

    def _get_sm_embeddings(self, sm_docs):
        embeddings = []
        for doc in sm_docs:
            embeddings.append(self._get_sm_embedding(doc))
        return embeddings

    # !!! Autogenerated !!! Do not change the method name.
    def predict(self, log_line: str):
        return self.predict_batch([log_line])[0]

    # !!! Autogenerated !!! Do not change the method name.
    def predict_batch(self, log_lines: List[str]):
        docs = list(self.nlp.pipe(log_lines))
        embeddings = self._get_sm_embeddings(docs)
        predictions = self.model.predict(embeddings)
        return predictions


# !!! Autogenerated !!! This will be used as a simple functionality test
if __name__ == "__main__":
    q = LevelQulogSmRf()
    s = "Hello world"
    p1 = q.predict(s)
    p2 = q.predict_batch([s])
    print("Prediction for '{}': {}".format(s, p1))
    print("Prediction for '{}': {}".format(s, p2[0]))